
import sys
sys.path.append("/home/kali/Agent")
import json
from langchain.text_splitter import RecursiveCharacterTextSplitter


# 文本的json解析
class JsonKaliLoader:
    def __init__(self, file_path):
        self.file_path = file_path

    def load(self):
        with open(self.file_path, 'r', encoding='UTF-8') as file:
            data_str = file.read()
            data = json.loads(data_str)
        return data


def main():
    json_file_path = '/home/kali/Agent/data/output.json'
    loader = JsonKaliLoader(json_file_path)
    document = loader.load()
    print(f"Successfully loaded document with description: {document['description']}")

    # 主任务描述
    main_task_desc = document['description']
    content = []
    metadata = []
    for sub_question in document['sub_questions']:
        # 将所有子任务信息组合成一个字符串
        page_content = (
            f"Sub-question: {sub_question['sub_question_desc']}\n"
            f"Step No: {sub_question['step_no']}\n"
            f"Attack Technique: {sub_question['attack_technique']}\n"
            f"Step Description: {sub_question['step_desc']}\n"
            f"Input: {sub_question['input']}\n"
            f"Tools: {sub_question['tools']}\n"
        )
        content.append(page_content)
        # 在metadata中加入主任务描述
        metadata.append({
            "main_task_desc": main_task_desc
        })

    # 创建文本分割器
    text_splitter = RecursiveCharacterTextSplitter.from_tiktoken_encoder(
        chunk_size=512,
        chunk_overlap=256,
    )

    # 创建文档块
    docs = text_splitter.create_documents(content, metadatas=metadata)

    print(f"Split document into {len(docs)} passages")
    for doc in docs:
        print(doc)


if __name__ == '__main__':
    main()