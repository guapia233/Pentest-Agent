import paramiko

# 远程Linux主机的IP地址、用户名和密码
hostname = '192.168.60.129'
username = 'kali'
password = 'kali'

# 检测目标主机ssh服务器开启状态：sudo service ssh status
# 如果SSH服务器未运行，使用以下命令启动ssh服务器：sudo service ssh start

# 创建SSH客户端
ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())



try:
    # 连接远程Linux主机
    ssh.connect(hostname, username=username, password=password)
    # 执行命令
    command_network = 'nmap -sn 192.168.60.0/24'
    stdin, stdout, stderr = ssh.exec_command(command_network)
    # stdin, stdout, stderr = ssh.exec_command('nmap  --min-rate 10000 -p- 192.168.92.132')

    # 输出命令执行结果
    # print(stdout.read().decode())

except Exception as e:
    print(f'Error: {str(e)}')


# 虚拟机服务器ip
ip_server1 = "192.168.60.1"
ip_server2 = "192.168.60.2"
# 攻击机ip
ip_self = "192.168.60.129"

# 处理网段扫描结果
# 按换行符拆分字符串
lines = stdout.read().decode().split('\n')

# 遍历每行，找到包含 "Nmap scan report" 的行并截取 IP 地址
ip_addresses = []
for line in lines:
    if "Nmap scan report" in line:
        ip_address = line.split('for ')[1].split()[0]
        ip_addresses.append(ip_address)

# 输出截取到的 IP 地址
skip_ips = {ip_server1,ip_server2, ip_self}
for ip in ip_addresses:
    if ip not in skip_ips:
        ip_target = ip
print("靶机IP地址为"+ip_target)

# 全端口扫描
command_port = 'nmap  --min-rate 10000 -p- ' + ip_target
stdin, stdout, stderr = ssh.exec_command(command_port)

# 输出命令执行结果 (这里可能需要输出修改一下 暂时不动吧)
print("\n端口扫描信息如下：\n")
print(stdout.read().decode())

# 目录扫描
command_web = ' dirsearch -u http://' + ip_target + '/'
stdin, stdout, stderr = ssh.exec_command(command_web)
output_lines = stdout.readlines()
for line in output_lines:
    if "] 200 -" in line:
        parts = line.split(' ')
        start_index = parts.index('200')
        end_index = start_index + 7
        result = ' '.join(parts[start_index:end_index])
        print(result)

# 关闭SSH连接
ssh.close()







