import sys
sys.path.append("/home/kali/Agent/Agent-main-master/")
sys.path.append("/home/kali/Agent/Agent-main-master/contant")

import logging
from pydantic import Field
from pydantic import BaseModel
from typing import Annotated, Type
from langchain_core.tools import BaseTool
from contant.LinuxContant import LHOST, username, password
from tool.LinuxConnect import LinuxConnect

class PortScanInput(BaseModel):
    target_ip: str = Field(..., description="Target IP address")

class perform_port_scan(BaseTool):
    """Perform port scan using Nmap."""
    name = "perform_port_scan"
    description = "一个接受字符串IP地址作为输入的端口扫描工具,扫描靶机的端口开放情况"
    args_schema: Type[BaseModel] = PortScanInput

    def _run(self, target_ip: str):
        """Perform port scan using nmap."""
        # 连接远程Linux主机
        connect = LinuxConnect(LHOST, username, password)
        command_port = (f'sudo nmap --min-rate 10000 -p-  {target_ip}')


        try:
            logging.info(f"写入命令行：{command_port}")
            stdin, stdout, stderr = connect.ssh.exec_command('echo %s | sudo -S %s' % (password, command_port))
            logging.info(f"成功获得端口扫描信息:{stdout}")
        except:
            raise Exception("系统异常")

        # 输出命令执行结果
        PORT = stdout.read().decode()
        return f"端口扫描成功：端口信息是 {PORT}"


if __name__ == '__main__':
    # Example usage
    target_ip_address = "192.168.92.137"
    scanner = perform_port_scan()
    result = scanner._run()
    # result = scanner._run(target_ip=target_ip_address)
    print(result)
