import sys
sys.path.append("/home/kali/Agent/Agent-main-master/contant")
sys.path.append("/home/kali/Agent/Agent-main-master/")

import logging
from pydantic import Field
from pydantic import BaseModel
from typing import Annotated, Type
from langchain_core.tools import BaseTool
from contant.LinuxContant import LHOST, username, password
from tool.LinuxConnect import LinuxConnect


class WebScanInput(BaseModel):
    target_ip: str = Field(..., description="Target IP address")


class perform_web_scan(BaseTool):
    name = "perform_web_scan"
    description = "一个接受字符串IP地址作为输入的web目录扫描工具,扫描靶机的web目录信息"
    args_schema: Type[BaseModel] = WebScanInput

    def _run(self, target_ip: str):
        result = ""

        # 连接远程Linux主机
        connect = LinuxConnect(LHOST, username, password)

        command_web = (f'sudo dirsearch -u http://{target_ip}')

        try:
            logging.info(f"写入命令行：{command_web}")
            stdin, stdout, stderr = connect.ssh.exec_command('echo %s | sudo -S %s' % (password, command_web))
            logging.info(f"成功获得web目录扫描信息:{stdout}")
        except:
            raise Exception("系统异常")

        output_lines = stdout.readlines()
        for line in output_lines:
            if "] 200 -" in line:
                parts = line.split(' ')
                start_index = parts.index('200')
                end_index = start_index + 7
                result = ' '.join(parts[start_index:end_index])
                return f"获得可疑web目录信息 {result}"
            else:
                return "没有web目录信息";

if __name__ == '__main__':
    # Example usage
    # target_ip_address = "192.168.92.134"
    web = perform_web_scan()
    run = web._run(target_ip=target_ip_address)
    print(run)
