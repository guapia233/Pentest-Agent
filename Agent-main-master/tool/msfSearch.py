import logging
import sys
import time
from typing import Type
sys.path.append("/home/kali/Agent/Agent-main-master/")

from langchain_core.tools import BaseTool
from openai import BaseModel
from pydantic import Field
from config.msfConsole import Client


class VulnerabilityInput(BaseModel):
    servers: str = Field()


# 3.1.使用名称向代理注册该工具 "perform_vuln_scan"。
class msfconsole_search(BaseTool):
    name = "msfconsole_search"
    description = "接受一个字符串作为搜索漏洞相关的模块，使用msfconsole去寻找漏洞相关的模块"
    args_schema: Type[BaseModel] = VulnerabilityInput

    def _run(self, servers: str):
        """使用命令来查询相关模块"""
        logging.info("查查询模块")
        auth = Client("127.0.0.1", port=55553, user="msf", passwd="msf")

        console_id = auth.create_console().get(b'id')
        res = auth.get_version()
        resp = auth.write_console(console_id, "search "+servers)
        time.sleep(1)
        while True:
            res = auth.read_console(console_id)
            if res[b'busy'] == True:
                time.sleep(1)
                continue
            elif res[b'busy'] == False:
                return res[b'data'].decode()
        auth.destroy_console(console_id)



if __name__ == '__main__':
    # 需要手动启动
    # msfconsole = msfconsole()
    # msfconsole._run()
    search = msfconsole_search()
    search__run = search._run(servers="ms17-010")
    print(search__run)
